<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cockroachdb-dev-test</artifactId>
        <groupId>io.github.melozzola</groupId>
        <version>1.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cockroachdb-junit4</artifactId>

    <dependencies>

        <dependency>
            <groupId>io.github.melozzola</groupId>
            <artifactId>cockroachdb-test-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.1.4</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>com.mycila</groupId>-->
                <!--<artifactId>license-maven-plugin</artifactId>-->
            <!--</plugin>-->

            <plugin>
                <!--
                    Build a fat jar that can be used as a library in other applications (without requiring any transitive
                    dependencies of its own).
                    If used as a library in another application, in case the other application also shares any of the
                    same dependencies, to avoid duplicate class issues resulting from copying dependency classes into
                    this jar, we relocate classes which are dependencies of this library into a new package within this
                    jar: io.github.melozzola.crdb.lib.*. We then update the bytecode in all classes in this jar to
                    refer to dependency classes in their new package.
                    Also we configure some transformers to merge open source licences present in any of the jars.
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>all</shadedClassifierName>
                            <relocations>
                                <relocation>
                                    <pattern>org.apache.commons.compress.</pattern>
                                    <shadedPattern>io.github.melozzola.crdb.lib.org.apache.commons.compress.</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.objenesis.</pattern>
                                    <shadedPattern>io.github.melozzola.crdb.lib.org.objenesis.</shadedPattern>
                                </relocation>
                            </relocations>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <addHeader>false</addHeader>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>